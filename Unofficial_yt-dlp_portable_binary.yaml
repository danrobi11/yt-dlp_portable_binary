name: Build yt-dlp Binary

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: debian:bullseye-slim
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          apt-get update
          apt-get install -y build-essential curl nasm yasm pkg-config \
            zlib1g-dev libbz2-dev liblzma-dev libexpat1-dev libsqlite3-dev \
            libncurses-dev libreadline-dev libffi-dev git python3 python3-dev python3-venv \
            libssl-dev
          dpkg -l | grep -E 'zlib1g-dev|libsqlite3-dev|libbz2-dev|liblzma-dev|libexpat1-dev|libssl-dev' || exit 1

      - name: Verify Compiler and Library Setup
        run: |
          gcc --version
          ld --version
          pkg-config --version
          pkg-config --libs --cflags zlib sqlite3 libexpat openssl || echo "pkg-config check failed, continuing..."
          find /usr/include -name expat.h || echo "expat.h not found"
          find /usr/include -name zlib.h || echo "zlib.h not found"
          find /usr/lib -name libexpat.so || echo "libexpat.so not found"
          find /usr/lib -name libz.so || echo "libz.so not found"
          find /usr/lib -name libssl.so || echo "libssl.so not found"

      - name: Build Python
        run: |
          curl -LO https://www.python.org/ftp/python/3.12.10/Python-3.12.10.tar.xz
          tar -xJf Python-3.12.10.tar.xz
          cd Python-3.12.10
          ./configure --prefix=/usr/local/python --enable-optimizations --enable-shared \
            --with-system-expat --with-openssl=/usr \
            CFLAGS="-I/usr/include" \
            LDFLAGS="-L/usr/lib"
          make -j$(nproc)
          make install
          ldconfig
          cd ..
          ls -l /usr/local/python/lib/libpython3.12.so* || echo "Python shared library not found"
          ldconfig -p | grep libpython3.12 || echo "libpython3.12 not in linker cache"
          ldd /usr/local/python/bin/python3 || echo "ldd failed"
          export LD_LIBRARY_PATH=/usr/local/python/lib:$LD_LIBRARY_PATH
          /usr/local/python/bin/python3 --version || echo "Python version check failed"
          /usr/local/python/bin/python3 -c "import ssl, hashlib, bz2, lzma, sqlite3, array, binascii, _ctypes, _struct, _io, _json, _random, _bisect, _heapq, _pickle, _csv, zlib" || echo "Module import failed"

      - name: Upload Python Build Log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: python-build-log
          path: Python-3.12.10/config.log

      - name: Set Up Python Virtual Environment
        run: |
          export LD_LIBRARY_PATH=/usr/local/python/lib:$LD_LIBRARY_PATH
          /usr/local/python/bin/python3 -m venv /tmp/venv
          . /tmp/venv/bin/activate
          pip install --upgrade pip
          pip install pyinstaller yt-dlp==2025.06.09 certifi websockets

      - name: Build FFmpeg
        run: |
          curl -LO https://ffmpeg.org/releases/ffmpeg-6.1.2.tar.gz
          tar -xzf ffmpeg-6.1.2.tar.gz
          cd ffmpeg-6.1.2
          ./configure --prefix=/usr/local \
            --enable-shared \
            --disable-static \
            --disable-all \
            --enable-avcodec \
            --enable-avformat \
            --enable-swresample \
            --enable-swscale \
            --enable-ffmpeg \
            --enable-ffprobe \
            --enable-demuxer=mp4,mov,flv,hls \
            --enable-muxer=mp4 \
            --enable-protocol=file,http,https,tcp,tls \
            --enable-decoder=aac,mp3,h264,h265 \
            --enable-encoder=aac \
            --enable-filter=aresample,scale \
            --enable-zlib \
            --enable-openssl \
            --enable-avdevice \
            --enable-avfilter \
            --enable-indev=lavfi \
            --disable-xlib \
            --disable-sdl2 \
            --disable-ffplay \
            --disable-libpulse \
            --disable-alsa \
            --extra-cflags="-I/usr/include" \
            --extra-ldflags="-L/usr/lib"
          make -j$(nproc)
          make install
          ldconfig
          cd ..

      - name: Verify FFmpeg Binaries
        run: |
          ls -l /usr/local/bin
          ls -l /usr/local/lib
          if [ ! -f /usr/local/bin/ffmpeg ] || [ ! -f /usr/local/bin/ffprobe ]; then
            echo "Error: FFmpeg or FFprobe binaries not found in /usr/local/bin"
            exit 1
          fi
          export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
          /usr/local/bin/ffmpeg -version || echo "ffmpeg failed to run"
          /usr/local/bin/ffprobe -version || echo "ffprobe failed to run"

      - name: Build yt-dlp
        run: |
          curl -LO https://github.com/yt-dlp/yt-dlp/archive/refs/tags/2025.06.09.tar.gz
          tar -xzf 2025.06.09.tar.gz
          cd yt-dlp-2025.06.09
          export LD_LIBRARY_PATH=/usr/local/lib:/usr/local/python/lib:$LD_LIBRARY_PATH
          /tmp/venv/bin/pyinstaller --onefile --name yt-dlp \
            --add-binary=/usr/local/bin/ffmpeg:. \
            --add-binary=/usr/local/bin/ffprobe:. \
            --log-level=DEBUG \
            --hidden-import=yt_dlp.compat._legacy \
            --hidden-import=yt_dlp.compat._deprecated \
            --hidden-import=yt_dlp.utils._legacy \
            --hidden-import=yt_dlp.utils._deprecated \
            yt_dlp/__main__.py
          if [ ! -f dist/yt-dlp ]; then
            echo "Error: yt-dlp binary not found in dist/"
            exit 1
          fi
          mv dist/yt-dlp ../yt-dlp-dist-x86_64
          cd ..

      - name: Verify yt-dlp Binary
        run: |
          export LD_LIBRARY_PATH=/usr/local/lib:/usr/local/python/lib:$LD_LIBRARY_PATH
          ./yt-dlp-dist-x86_64 --version || echo "yt-dlp --version failed"
          ./yt-dlp-dist-x86_64 --help || echo "yt-dlp --help failed"

      - name: Upload yt-dlp Binary
        uses: actions/upload-artifact@v4
        with:
          name: yt-dlp-binary
          path: |
            yt-dlp-dist-x86_64
            yt-dlp-2025.06.09/build/yt-dlp/warn-yt-dlp.txt
            yt-dlp-2025.06.09/build/yt-dlp/xref-yt-dlp.html

      - name: Upload PyInstaller Build Artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: pyinstaller-artifacts
          path: |
            yt-dlp-2025.06.09/build/yt-dlp/*
            yt-dlp-2025.06.09/dist/yt-dlp
